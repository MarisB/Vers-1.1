<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActNumberLabel" xml:space="preserve">
    <value>Act number</value>
  </data>
  <data name="AddressLabel" xml:space="preserve">
    <value>Address</value>
  </data>
  <data name="DefektacijasAktsTitle" xml:space="preserve">
    <value>Defective act</value>
  </data>
  <data name="DefektaNrLabel" xml:space="preserve">
    <value>Defect number</value>
  </data>
  <data name="DefektiLabel" xml:space="preserve">
    <value>Defects</value>
  </data>
  <data name="DefektiTitle" xml:space="preserve">
    <value>Defects</value>
  </data>
  <data name="DefektācijasAprakstsLabel" xml:space="preserve">
    <value>Comments</value>
  </data>
  <data name="DeleteConfirmationLabel" xml:space="preserve">
    <value>Do you really want to delete this entry?</value>
  </data>
  <data name="HorizantalaVirsmaLabel" xml:space="preserve">
    <value>Horizontal surface</value>
  </data>
  <data name="LaiksKopaLabel" xml:space="preserve">
    <value>Total time</value>
  </data>
  <data name="MailLabel" xml:space="preserve">
    <value>Mail</value>
  </data>
  <data name="NameLabel" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="NoLabel" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="ParbaudePabeigtaLabel" xml:space="preserve">
    <value>Complete time</value>
  </data>
  <data name="ParbaudeUzsaktaLabel" xml:space="preserve">
    <value>Start time</value>
  </data>
  <data name="ParbaudiVeicaLabel" xml:space="preserve">
    <value>Check was done by</value>
  </data>
  <data name="PasutitajaParstavisLabel" xml:space="preserve">
    <value>Customer representative</value>
  </data>
  <data name="PhoneLabel" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="QuestionLabel" xml:space="preserve">
    <value>Question</value>
  </data>
  <data name="SertificateNumberLabel" xml:space="preserve">
    <value>Sertificate number</value>
  </data>
  <data name="SettingsMenu" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="SurnameLabel" xml:space="preserve">
    <value>Surname</value>
  </data>
  <data name="VatLabel" xml:space="preserve">
    <value>VAT %</value>
  </data>
  <data name="VerikalaVirsmaLabel" xml:space="preserve">
    <value>Vertical surface (parapet, wall)</value>
  </data>
  <data name="YesLabel" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="epastaTeksts" xml:space="preserve">
    <value>&lt;p&gt;&lt;b&gt;Act number  {DefektacijasAkts.AktaNr}&lt;/b&gt;&lt;/p&gt;</value>
  </data>
  <data name="EmailSubjectLabel" xml:space="preserve">
    <value>Defective act and defect pictures are in attachment.</value>
  </data>
  <data name="DefectPictureLabel" xml:space="preserve">
    <value>Defect picture</value>
  </data>
  <data name="DiagnostikaLabel" xml:space="preserve">
    <value>Diagnostics</value>
  </data>
  <data name="KopaLabel" xml:space="preserve">
    <value>Total</value>
  </data>
  <data name="ParbaudamaPlatibaLabel" xml:space="preserve">
    <value>Verifiable area</value>
  </data>
  <data name="TransportaIzdevumiLabel" xml:space="preserve">
    <value>Transport costs</value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>Language</value>
  </data>
  <data name="LogoLabel" xml:space="preserve">
    <value>Logo</value>
  </data>
  <data name="PievienotLbel" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="UznemumaDatiLabel" xml:space="preserve">
    <value>Company info</value>
  </data>
  <data name="CurrencyLabel" xml:space="preserve">
    <value>Currency abbreviation</value>
  </data>
  <data name="EquipmentCallibrationLabel" xml:space="preserve">
    <value>Calibration of the equipment (Kv)</value>
  </data>
  <data name="EquipmentLabel" xml:space="preserve">
    <value>Equipment name</value>
  </data>
  <data name="EquipmentMenu" xml:space="preserve">
    <value>Equipment</value>
  </data>
  <data name="HelpMenu" xml:space="preserve">
    <value>Help</value>
  </data>
  <data name="HighWoltageLabel" xml:space="preserve">
    <value>High woltage inspection device</value>
  </data>
  <data name="LowWoltageLabel" xml:space="preserve">
    <value>Low woltage inspection device</value>
  </data>
  <data name="MembraneNameLabel" xml:space="preserve">
    <value>Waterproofing membrane name</value>
  </data>
  <data name="MembraneThicknessLabel" xml:space="preserve">
    <value>Waterproofing membrane thickness</value>
  </data>
  <data name="MembraneTypeLabel" xml:space="preserve">
    <value>Waterproofing membrane type</value>
  </data>
  <data name="SerialNumberLabel" xml:space="preserve">
    <value>Serial No</value>
  </data>
</root>